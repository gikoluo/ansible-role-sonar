---

- include: set-role-variables.yml

- name: Create a database for Sonar.
  mysql_db:
    name: "{{ sonar_mysql_database }}"
    state: present

- name: Create a sonar user.
  mysql_user:
    name: "{{ sonar_mysql_username }}"
    host: "{{ item }}"
    priv: "{{ sonar_mysql_database }}.*:ALL"
    password: "{{ sonar_mysql_password }}"
  with_items: "{{ sonar_mysql_allowed_hosts }}"


- name: "Copy zip"
  become: yes
  copy:
    src: "{{ sonar_download_path }}/{{ sonar_tarball }}.zip"
    dest: "/tmp/{{ sonar_tarball }}.zip"

- name: Extract the Logstash tarball
  become: yes
  unarchive:
    src: "/tmp/{{ sonar_tarball }}.zip"
    dest: "/tmp/"
    copy: no
    creates: "/tmp/{{ sonar_tarball }}"

# - name: Unzip Sonar.
#   unarchive:
#     src: "{{ workspace }}/{{ sonar_tarball }}.zip"
#     dest: /usr/local/
#     copy: no
#     creates: /usr/local/sonar/COPYING

- name: Install Logstash
  become: yes
  command: "cp -R /tmp/{{ sonar_tarball }} {{ sonar_install_dir }}"
  args:
    creates: "{{ sonar_install_dir }}"
    removes: "/tmp/{{ sonar_tarball }}"
  register: install_rs


- include: configure.yml

- name: Add sonar symlinks for service management.
  file:
    src: "{{ sonar_install_dir }}/bin/linux-x86-64/sonar.sh"
    dest: "{{ item }}"
    state: link
  with_items:
    - /usr/bin/sonar
    - /etc/init.d/sonar

- name: Ensure Sonar is running and set to start on boot.
  service: name=sonar state=started enabled=yes

- name: Make sure Sonar is responding on the configured port.
  wait_for: port=9000 delay=3 timeout=300
